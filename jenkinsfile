pipeline {
  agent any
  environment {
    IMAGE_TAG = "ci-docker:latest"
  }
  stages {

    stage('Checkout') {
      steps {
        checkout scm
        withCredentials([sshUserPrivateKey(credentialsId:"jenkins_key_access", keyFileVariable: "SSH_KEY")]) {

         sh "git branch staging" 
         sh "git checkout staging"
         sh 'GIT_SSH_COMMAND="ssh -i $SSH_KEY" git push origin staging '
        }
      }
    }
    stage('Checkout') {
  steps {
    checkout scm
    withCredentials([sshUserPrivateKey(credentialsId:"jenkins_key_access", keyFileVariable: "SSH_KEY")]) {
      sh "git checkout -b staging"
    }
  }
}

    stage('Install Dependencies') {
      steps {
        sh 'pip install -r requirements.txt'
      }
    }
    stage('Test') {
      steps {
        sh 'python -m pytest'
      }
    }
    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_ACCESS_TOKEN')]) {
          sh 'docker build -t $IMAGE_TAG .'
          sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
          sh 'docker push $IMAGE_TAG'
        }
      }
    }
    stage('Merge to Main Branch') {
      steps {
        sh 'git checkout main'
        sh 'git merge staging'
        sh 'git push origin main'
      }
    }

  }
}
